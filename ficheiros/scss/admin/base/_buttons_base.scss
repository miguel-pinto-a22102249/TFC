/***********************************************
*                    Bot√µes                    *
************************************************/

$button-global-border-radius: 0px !default;

@mixin button($color: white,
$background-color: $cor-1,
$border-color: $background-color,


$border-radius: $button-global-border-radius,


$color-hover: darken($color, 5%),
$background-color-hover: darken($background-color, 5%),
$border-color-hover: $background-color-hover,



$color-ghost: $background-color,
$background-color-ghost: transparent,
$border-color-ghost: $color-ghost,

$color-ghost-hover: $color-hover,
$background-color-ghost-hover: $background-color-hover,
$border-color-ghost-hover: $background-color-hover) {
    @include button-base; // @include single-transition;
    @include transition(all .15s ease);
    @include box-shadow(none);

    color: $color;
    background-color: $background-color;
    border: solid 1px $background-color;

    padding-top: 1em;
    padding-right: 2em;
    padding-bottom: 1.0625em;
    padding-left: 2em;

    text-decoration: none !important;
    will-change: transform;
    line-height: 1.2em;
    vertical-align: middle;


    @include border-radius($border-radius);



    &:focus {
        background-color: darken($background-color-hover, 5%);
        border-color: darken($border-color-hover, 5%);
        color: $color-hover;
        text-decoration: none !important;
    }


    &:hover {
        background-color: $background-color-hover;
        border-color: $border-color-hover;
        color: $color-hover;
        text-decoration: none !important;
    }


    &:active {
        background-color: darken($background-color-hover, 5%);
        border-color: darken($border-color-hover, 5%);
        color: darken($color-hover, 5%);
        @include transform(translate3d(0px, 1px, 0px));
    }




    &.disabled, &[disabled] {
        &, &:focus, &:active, &:hover {
            opacity: 0.5;
            background-color: $background-color;
            border-color: $border-color;
            color: $color;
            cursor: not-allowed;
            @include transform(translate3d(0px, 0px, 0px));
            @include box-shadow(none);
        }
    }

    &.no-margin-bottom {
        margin-bottom: 0;
    }

    &.button-ghost,
    &.ghost,
    &.button-open {
        background-color: $background-color-ghost;
        color: $color-ghost;
        border: solid 1px $border-color-ghost;

        &:focus {
            background-color: darken($background-color-ghost-hover, 5%);
            border-color: darken($border-color-ghost-hover, 5%);
            color: $color-ghost-hover;
            text-decoration: none !important;

            svg {
                fill: $color-ghost-hover;
            }
        }

        &:hover {
            background-color: $background-color-ghost-hover;
            border: solid 1px $border-color-ghost-hover;
            color: $color-ghost-hover;
            text-decoration: none !important;

            svg {
                fill: $color-ghost-hover;
            }
        }

        &.disabled, &[disabled], &.disabled:hover, &[disabled]:hover {
            opacity: 0.5;
            background-color: $background-color-ghost;
            color: $color-ghost;
            border: solid 1px $border-color-ghost;
        }
    }

    &.button-link {
        background-color: transparent;
        color: $color-ghost;
        border: solid 1px transparent;

        &:focus {
            background-color: darken($background-color-ghost-hover, 5%);
            border-color: darken($border-color-ghost-hover, 5%);
            color: $color-ghost-hover;
            text-decoration: none !important;
        }

        &:hover {
            background-color: $background-color-ghost-hover;
            border: solid 1px $border-color-ghost-hover;
            color: $color-ghost-hover;
            text-decoration: none !important;
        }

        &.disabled, &[disabled], &.disabled:hover, &[disabled]:hover {
            opacity: 0.5;
            background-color: transparent;
            color: $color-ghost;
            border: solid 1px transparent;
        }
    }

    &.simple {
        border-color: transparent;
    }

    &.button-round {

        // padding: 1em;
        line-height: 1.2em;
        padding: 1em;

        .icon {
            width: 1.2em;
            height: 1.2em;
            @include flexbox;
            @include align-items(center);
            @include justify-content(center);
        }

        &.small {
            line-height: 1em;
            padding: 0.7em;

            // height: 2.4em;
            // p
        }

        &.x-small {
            padding: 0.5em;
        }
    }

    &.small {

        padding-top: 0.7em;
        padding-right: 1.2em;
        padding-bottom: 0.7em;
        padding-left: 1.2em;
        font-size: 0.8125rem;
        height: auto;
    }

    &.x-small {
        height: auto;
        padding-top: 0.5em;
        padding-right: 1.2em;
        padding-bottom: 0.5em;
        padding-left: 1.2em;
        font-size: 0.7rem;
    }

    .icon {
        display: inline-block;
        width: 1em;
        height: 1em;
        vertical-align: middle;
        position: relative;

        &+*:not(.ripple) {
            margin-left: 5px;
        }


        svg {
            position: absolute;
            top: 0px;
            left: 0px;
            width: 100%;
            height: 100%;
        }
    }

    span {
        vertical-align: middle;
    }

    @content;

}